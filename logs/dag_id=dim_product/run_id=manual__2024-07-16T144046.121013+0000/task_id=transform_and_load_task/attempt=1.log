[2024-07-16T14:43:08.502+0000] {taskinstance.py:1956} INFO - Dependencies all met for dep_context=non-requeueable deps ti=<TaskInstance: dim_product.transform_and_load_task manual__2024-07-16T14:40:46.121013+00:00 [queued]>
[2024-07-16T14:43:08.512+0000] {taskinstance.py:1956} INFO - Dependencies all met for dep_context=requeueable deps ti=<TaskInstance: dim_product.transform_and_load_task manual__2024-07-16T14:40:46.121013+00:00 [queued]>
[2024-07-16T14:43:08.513+0000] {taskinstance.py:2170} INFO - Starting attempt 1 of 1
[2024-07-16T14:43:08.528+0000] {taskinstance.py:2191} INFO - Executing <Task(_PythonDecoratedOperator): transform_and_load_task> on 2024-07-16 14:40:46.121013+00:00
[2024-07-16T14:43:08.534+0000] {standard_task_runner.py:60} INFO - Started process 54 to run task
[2024-07-16T14:43:08.538+0000] {standard_task_runner.py:87} INFO - Running: ['***', 'tasks', 'run', 'dim_product', 'transform_and_load_task', 'manual__2024-07-16T14:40:46.121013+00:00', '--job-id', '101', '--raw', '--subdir', 'DAGS_FOLDER/dim_product_orchestration.py', '--cfg-path', '/tmp/tmputxcewzx']
[2024-07-16T14:43:08.540+0000] {standard_task_runner.py:88} INFO - Job 101: Subtask transform_and_load_task
[2024-07-16T14:43:08.593+0000] {task_command.py:423} INFO - Running <TaskInstance: dim_product.transform_and_load_task manual__2024-07-16T14:40:46.121013+00:00 [running]> on host d3d5a4009625
[2024-07-16T14:43:08.685+0000] {taskinstance.py:2480} INFO - Exporting env vars: AIRFLOW_CTX_DAG_OWNER='***' AIRFLOW_CTX_DAG_ID='dim_product' AIRFLOW_CTX_TASK_ID='transform_and_load_task' AIRFLOW_CTX_EXECUTION_DATE='2024-07-16T14:40:46.121013+00:00' AIRFLOW_CTX_TRY_NUMBER='1' AIRFLOW_CTX_DAG_RUN_ID='manual__2024-07-16T14:40:46.121013+00:00'
[2024-07-16T14:43:09.418+0000] {pipeline_options.py:923} WARNING - Bucket specified in temp_location has soft-delete policy enabled. To avoid being billed for unnecessary storage costs, turn off the soft delete feature on buckets that your Dataflow jobs use for temporary and staging storage. For more information, see https://cloud.google.com/storage/docs/use-soft-delete#remove-soft-delete-policy.
[2024-07-16T14:43:09.720+0000] {pipeline_options.py:923} WARNING - Bucket specified in staging_location has soft-delete policy enabled. To avoid being billed for unnecessary storage costs, turn off the soft delete feature on buckets that your Dataflow jobs use for temporary and staging storage. For more information, see https://cloud.google.com/storage/docs/use-soft-delete#remove-soft-delete-policy.
[2024-07-16T14:43:11.795+0000] {pipeline_options.py:923} WARNING - Bucket specified in temp_location has soft-delete policy enabled. To avoid being billed for unnecessary storage costs, turn off the soft delete feature on buckets that your Dataflow jobs use for temporary and staging storage. For more information, see https://cloud.google.com/storage/docs/use-soft-delete#remove-soft-delete-policy.
[2024-07-16T14:43:12.140+0000] {pipeline_options.py:923} WARNING - Bucket specified in staging_location has soft-delete policy enabled. To avoid being billed for unnecessary storage costs, turn off the soft delete feature on buckets that your Dataflow jobs use for temporary and staging storage. For more information, see https://cloud.google.com/storage/docs/use-soft-delete#remove-soft-delete-policy.
[2024-07-16T14:43:13.847+0000] {dataflow_runner.py:397} INFO - Pipeline has additional dependencies to be installed in SDK worker container, consider using the SDK container image pre-building workflow to avoid repetitive installations. Learn more on https://cloud.google.com/dataflow/docs/guides/using-custom-containers#prebuild
[2024-07-16T14:43:13.851+0000] {environments.py:314} INFO - Using provided Python SDK container image: gcr.io/cloud-dataflow/v1beta3/beam_python3.8_sdk:2.57.0
[2024-07-16T14:43:13.852+0000] {environments.py:321} INFO - Python SDK container image set to "gcr.io/cloud-dataflow/v1beta3/beam_python3.8_sdk:2.57.0" for Docker environment
[2024-07-16T14:43:14.195+0000] {apiclient.py:663} INFO - Starting GCS upload to gs://ingestion_layer/staging/dim-product-bigquery-etl.1721140994.184628/submission_environment_dependencies.txt...
[2024-07-16T14:43:15.259+0000] {apiclient.py:673} INFO - Completed GCS upload to gs://ingestion_layer/staging/dim-product-bigquery-etl.1721140994.184628/submission_environment_dependencies.txt in 1 seconds.
[2024-07-16T14:43:15.262+0000] {apiclient.py:663} INFO - Starting GCS upload to gs://ingestion_layer/staging/dim-product-bigquery-etl.1721140994.184628/pipeline.pb...
[2024-07-16T14:43:16.384+0000] {apiclient.py:673} INFO - Completed GCS upload to gs://ingestion_layer/staging/dim-product-bigquery-etl.1721140994.184628/pipeline.pb in 1 seconds.
[2024-07-16T14:43:16.439+0000] {pipeline_options.py:339} WARNING - Unknown pipeline options received: celery,worker. Ignore if flags are used for internal purposes.
[2024-07-16T14:43:16.450+0000] {taskinstance.py:2698} ERROR - Task failed with exception
Traceback (most recent call last):
  File "/home/airflow/.local/lib/python3.8/site-packages/airflow/models/taskinstance.py", line 433, in _execute_task
    result = execute_callable(context=context, **execute_callable_kwargs)
  File "/home/airflow/.local/lib/python3.8/site-packages/airflow/decorators/base.py", line 241, in execute
    return_value = super().execute(context)
  File "/home/airflow/.local/lib/python3.8/site-packages/airflow/operators/python.py", line 199, in execute
    return_value = self.execute_callable()
  File "/home/airflow/.local/lib/python3.8/site-packages/airflow/operators/python.py", line 216, in execute_callable
    return self.python_callable(*self.op_args, **self.op_kwargs)
  File "/opt/airflow/dags/dim_product_orchestration.py", line 40, in transform_and_load_task
    run_pipeline_beam(avro_file_pattern, table_spec, schema, unique_key)
  File "/opt/airflow/plugins/my_modules/transformation_load_stage.py", line 108, in run_pipeline
    (
  File "/home/airflow/.local/lib/python3.8/site-packages/apache_beam/pipeline.py", line 613, in __exit__
    self.result = self.run()
  File "/home/airflow/.local/lib/python3.8/site-packages/apache_beam/pipeline.py", line 560, in run
    return Pipeline.from_runner_api(
  File "/home/airflow/.local/lib/python3.8/site-packages/apache_beam/pipeline.py", line 587, in run
    return self.runner.run_pipeline(self, self._options)
  File "/home/airflow/.local/lib/python3.8/site-packages/apache_beam/runners/dataflow/dataflow_runner.py", line 502, in run_pipeline
    self.dataflow_client.create_job(self.job), self)
  File "/home/airflow/.local/lib/python3.8/site-packages/apache_beam/utils/retry.py", line 298, in wrapper
    return fun(*args, **kwargs)
  File "/home/airflow/.local/lib/python3.8/site-packages/apache_beam/runners/dataflow/internal/apiclient.py", line 694, in create_job
    self.create_job_description(job)
  File "/home/airflow/.local/lib/python3.8/site-packages/apache_beam/runners/dataflow/internal/apiclient.py", line 788, in create_job_description
    job.proto.environment = Environment(
  File "/home/airflow/.local/lib/python3.8/site-packages/apache_beam/runners/dataflow/internal/apiclient.py", line 284, in __init__
    key='options', value=to_json_value(options_dict)))
  File "/home/airflow/.local/lib/python3.8/site-packages/apache_beam/internal/gcp/json_value.py", line 100, in to_json_value
    key=k, value=to_json_value(v, with_type=with_type)))
  File "/home/airflow/.local/lib/python3.8/site-packages/apache_beam/internal/gcp/json_value.py", line 94, in to_json_value
    entries=[to_json_value(o, with_type=with_type) for o in obj]))
  File "/home/airflow/.local/lib/python3.8/site-packages/apache_beam/internal/gcp/json_value.py", line 94, in <listcomp>
    entries=[to_json_value(o, with_type=with_type) for o in obj]))
  File "/home/airflow/.local/lib/python3.8/site-packages/apache_beam/internal/gcp/json_value.py", line 122, in to_json_value
    raise TypeError('Cannot convert %s to a JSON value.' % repr(obj))
TypeError: Cannot convert PosixPath('/opt/***/plugins/my_modules/my_modules-001.tar.gz') to a JSON value.
[2024-07-16T14:43:16.480+0000] {taskinstance.py:1138} INFO - Marking task as FAILED. dag_id=dim_product, task_id=transform_and_load_task, execution_date=20240716T144046, start_date=20240716T144308, end_date=20240716T144316
[2024-07-16T14:43:16.511+0000] {standard_task_runner.py:107} ERROR - Failed to execute job 101 for task transform_and_load_task (Cannot convert PosixPath('/opt/***/plugins/my_modules/my_modules-001.tar.gz') to a JSON value.; 54)
[2024-07-16T14:43:16.544+0000] {local_task_job_runner.py:234} INFO - Task exited with return code 1
[2024-07-16T14:43:16.560+0000] {taskinstance.py:3280} INFO - 0 downstream tasks scheduled from follow-on schedule check
